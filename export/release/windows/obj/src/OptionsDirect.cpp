// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_OptionsDirect
#include <OptionsDirect.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e4baa538405dcd60_5_new,"OptionsDirect","new",0x43d34d79,"OptionsDirect.new","OptionsDirect.hx",5,0x6d5cc417)
HX_LOCAL_STACK_FRAME(_hx_pos_e4baa538405dcd60_8_create,"OptionsDirect","create",0xe2225f83,"OptionsDirect.create","OptionsDirect.hx",8,0x6d5cc417)

void OptionsDirect_obj::__construct( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut){
            	HX_STACKFRAME(&_hx_pos_e4baa538405dcd60_5_new)
HXDLIN(   5)		super::__construct(TransIn,TransOut);
            	}

Dynamic OptionsDirect_obj::__CreateEmpty() { return new OptionsDirect_obj; }

void *OptionsDirect_obj::_hx_vtable = 0;

Dynamic OptionsDirect_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< OptionsDirect_obj > _hx_result = new OptionsDirect_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool OptionsDirect_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3f706236) {
		if (inClassId<=(int)0x23a57bae) {
			if (inClassId<=(int)0x133e3247) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x133e3247;
			} else {
				return inClassId==(int)0x23a57bae;
			}
		} else {
			return inClassId==(int)0x2f064378 || inClassId==(int)0x3f706236;
		}
	} else {
		if (inClassId<=(int)0x7c795c9f) {
			return inClassId==(int)0x62817b24 || inClassId==(int)0x7c795c9f;
		} else {
			return inClassId==(int)0x7ccf8994;
		}
	}
}

void OptionsDirect_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_e4baa538405dcd60_8_create)
HXLINE(   9)		this->transIn = ::flixel::addons::transition::FlxTransitionableState_obj::defaultTransIn;
HXLINE(  10)		this->transOut = ::flixel::addons::transition::FlxTransitionableState_obj::defaultTransOut;
HXLINE(  12)		this->persistentUpdate = true;
HXLINE(  14)		 ::flixel::FlxSprite menuBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXDLIN(  14)		 ::flixel::FlxSprite menuBG1 = menuBG->loadGraphic(::Paths_obj::loadImage(HX_("menuDesat",26,91,04,72),null()),null(),null(),null(),null(),null());
HXLINE(  15)		menuBG1->set_color(-1412611);
HXLINE(  16)		menuBG1->setGraphicSize(::Std_obj::_hx_int((menuBG1->get_width() * ((Float)1.1))),null());
HXLINE(  17)		menuBG1->updateHitbox();
HXLINE(  18)		menuBG1->screenCenter(null());
HXLINE(  19)		menuBG1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE(  20)		this->add(menuBG1);
HXLINE(  22)		this->openSubState( ::OptionsMenu_obj::__alloc( HX_CTX ,null()));
            	}



::hx::ObjectPtr< OptionsDirect_obj > OptionsDirect_obj::__new( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut) {
	::hx::ObjectPtr< OptionsDirect_obj > __this = new OptionsDirect_obj();
	__this->__construct(TransIn,TransOut);
	return __this;
}

::hx::ObjectPtr< OptionsDirect_obj > OptionsDirect_obj::__alloc(::hx::Ctx *_hx_ctx, ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut) {
	OptionsDirect_obj *__this = (OptionsDirect_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OptionsDirect_obj), true, "OptionsDirect"));
	*(void **)__this = OptionsDirect_obj::_hx_vtable;
	__this->__construct(TransIn,TransOut);
	return __this;
}

OptionsDirect_obj::OptionsDirect_obj()
{
}

::hx::Val OptionsDirect_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return ::hx::Val( create_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *OptionsDirect_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *OptionsDirect_obj_sStaticStorageInfo = 0;
#endif

static ::String OptionsDirect_obj_sMemberFields[] = {
	HX_("create",fc,66,0f,7c),
	::String(null()) };

::hx::Class OptionsDirect_obj::__mClass;

void OptionsDirect_obj::__register()
{
	OptionsDirect_obj _hx_dummy;
	OptionsDirect_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("OptionsDirect",07,1d,f7,36);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(OptionsDirect_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< OptionsDirect_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OptionsDirect_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OptionsDirect_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

